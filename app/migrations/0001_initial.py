# Generated by Django 5.0.7 on 2024-10-21 04:37

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='MnemonicScheme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='mnemoschemes/', verbose_name='Мнемосхема')),
                ('slug', models.SlugField(max_length=30, unique=True, verbose_name='Слаг')),
                ('navmenu_name', models.CharField(max_length=100, verbose_name='Название для меню')),
            ],
            options={
                'verbose_name': 'Мнемосхема',
                'verbose_name_plural': 'Мнемосхемы',
                'ordering': ['navmenu_name'],
            },
        ),
        migrations.CreateModel(
            name='SMBServer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('server_ip', models.CharField(max_length=100, verbose_name='Samba-адрес сервера')),
                ('server_name', models.CharField(max_length=100, verbose_name='Samba-имя сервера')),
                ('shared_folder_name', models.CharField(max_length=100, verbose_name='Имя расшаренной папки')),
                ('file_name', models.CharField(max_length=100, verbose_name='Путь к файлу от расшаренной папки')),
            ],
            options={
                'verbose_name': 'Samba-сервер',
                'verbose_name_plural': 'Samba-сервера',
            },
        ),
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100, verbose_name='Номер датчика')),
                ('pos_x', models.CharField(max_length=100, verbose_name='Координата X')),
                ('pos_y', models.CharField(max_length=100, verbose_name='Координата Y')),
                ('color', models.CharField(max_length=100, verbose_name='Цвет')),
                ('units', models.CharField(max_length=100, verbose_name='Единицы измерения')),
                ('current_value', models.FloatField(blank=True, default=0.0, verbose_name='Текущее значение')),
                ('scheme', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='sensors', to='app.mnemonicscheme')),
            ],
            options={
                'verbose_name': 'Датчик',
                'verbose_name_plural': 'Датчики',
            },
        ),
        migrations.CreateModel(
            name='HistoricalValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=100, null=True, verbose_name='Актуальное значение')),
                ('creation_time', models.DateTimeField(auto_now_add=True, verbose_name='Время обработки')),
                ('sensor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='historic_values', to='app.sensor', verbose_name='Датчик')),
            ],
            options={
                'verbose_name': 'Историческое значение',
                'verbose_name_plural': 'Исторические значения',
                'ordering': ['-creation_time'],
            },
        ),
    ]
